version: '3.9'
services:
    nginx:
        image: nginx:latest
        volumes:
            - "./docker/etc/nginx/default.template.conf:/etc/nginx/conf.d/default.conf"
            - "./docker/etc/nginx/ssl:/etc/ssl"
            - "./:/var/www/html:cached"
        ports:
            - "8080:80"
            - "3000:443"
        restart: always
        networks:
            - backend
    php:
        image: nanoninja/php-fpm:latest
        restart: always
        ports:
            - "9000:9000"
        volumes:
            - "./docker/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./:/var/www/html:cached"
        networks:
            - backend
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        ports:
            - "8000:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=mysql
        restart: always
        networks:
            - backend
    mysqldb:
        image: mysql:latest
        container_name: mysql
        restart: always
        environment:
            - MYSQL_HOST=mysql
            - MYSQL_DATABASE=sakila
            - MYSQL_ROOT_USER=root
            - MYSQL_ROOT_PASSWORD=root
        ports:
            - "8989:3306"
        volumes:
            - "./docker/data/db/mysql:/var/lib/mysql"
        networks:
            - backend
        command: ["--character-set-server=utf8", "--collation-server=utf8_general_ci", "--skip-character-set-client-handshake"]
    sphinx:
        build:
            context: ./docker/etc/sphinx
            dockerfile: Dockerfile-sphinx
        container_name: sphinx
        restart: always
        ports:
            - "9311:9306"
        volumes:
            - "./docker/etc/sphinx/conf:/sphinx/conf"
            - "./docker/data/index/sphinx/data:/sphinx/data"
            - "./docker/data/index/sphinx/runs:/sphinx/runs"
            - "./docker/data/index/sphinx/logs:/sphinx/logs"
            - "./docker/data/index/sphinx/binlog:/sphinx/binlog"
        entrypoint: ["/bin/sh", "/sphinx/conf/entrypoint.sh"]
        networks:
            - backend
networks:
    backend: {}
